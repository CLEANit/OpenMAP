[tox]
isolated_build = True
envlist = lint, py{38},pre-commit
skipsdist = True


[testenv]
whitelist_externals = poetry
commands =
    poetry install --no-root -v
    poetry run pytest tests/

;    poetry install -vvv
;    poetry run pytest --cov=my_app tests/
;    poetry run coverage report -m



;[testenv]
;#setenv = PYTHONPATH = {toxinidir}/venv
;basepython = python
;usedevelop = False
;deps =
;  -r{toxinidir}/requirements-dev.txt
;commands = pytest  {posargs}
;           #pip install -e .[d]
;           #coverage erase
;           #coverage run -m pytest tests
;           #coverage report
;changedir={toxinidir}


[testenv:dev]
usedevelop=True
recreate = False
commands =
    # to run arbitrary commands: tox -e dev -- bash
    {posargs:py.test }


[testenv:black]
description = autoformat  black
skip_install = true
deps =
    black
commands =
    black   setup.py  openmap  tests


[testenv:isort]

skip_install = true
deps =
    isort
commands =
    isort   --recursive  tests/  openmap/

[isort]
skip = .tox, .venv

[testenv:flake8]
description = autoformat with flake8
basepython = python
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-docstrings>=1.3.1
    flake8-import-order>=0.9
    flake8-typing-imports>=1.1
    pep8-naming
commands =
    flake8  openmap/ tests/

[testenv:lint]
description = autoformat  with autopep8  isort and black
skip_install = true
deps =
    black
    isort
    autopep8
    pylint
    flake8
    flake8-bandit
    flake8-docstrings

commands =
    autopep8 --recursive   --in-place --aggressive --aggressive  --ignore=E123,E125,N802,N806,F401,W503,C901 tests/  openmap/
    isort  --recursive  tests/ openmap/
    black tests/ openmap/
    pylint tests/ openmap/
    flake8 tests/ openmap/




[testenv:pre-commit]
basepython = python
usedevelop = True
deps =
  pre-commit
commands =
  pre-commit run -a

[testenv:doc8]
allowlist_externals = make
description = doc8 is an opinionated style checker for rst
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 --max-line-length 120 -e .rst docs



[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python
usedevelop = True
whitelist_externals = make
                    /bin/bash
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    #make -C docs {posargs: html } BUILDDIR={envdir} "SPHINXOPTS=-W -E -D suppress_warnings=ref.term"
    make -C docs {posargs: html }
extras =
    docs

[testenv:linters]
basepython = python
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:doc8]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:doc8]commands}


;[testenv:mypy]
;deps =
;    mypy
;
;commands =
;    mypy my_app